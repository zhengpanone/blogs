========================
30.4 Socket入门
========================

socket介绍
=================================

Socket(中文译为套接字)是操作系统内核中的一个数据结构，它几乎是所有网络通信的基础。网络通信，归根到底还是进程间的通信（不同计算机上的进程间通信, 又称为网络通信, IP协议进行的主要是端到端通信）。在网络中，每一个节点（计算机或路由）都有一个网络地址，也就是IP地址。两个进程通信时，首先要确定各自所在的网络节点的网络地址。但是，网络地址只能确定进程所在的计算机，而一台计算机上很可能同时运行着多个进程，所以仅凭网络地址还不能确定到底是和网络中的哪一个进程进行通信，因此套接字中还需要包括其他的信息，也就是端口号(PORT)。在一台计算机中，一个端口号一次只能分配给一个进程，也就是说，在一台计算机中，端口号和进程之间是一 一对应的关系。
socket使用(IP地址，协议，端口号)来标识一个进程。所以，使用端口号和网络地址的组合可以唯一的确定整个网络中的一个网络进程。端口号的范围从0~65535，一类是由互联网指派名字和号码公司ICANN负责分配给一些常用的应用程序固定使用的“周知的端口”，其值一般为0~1023, 用户自定义端口号一般大于等于1024。
网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一端称为一个socket。每一个socket都用一个半相关描述{协议、本地地址、本地端口}来表示；一个完整的套接字则用一个相关描述{协议、本地地址、本地端口、远程地址、远程端口}来表示。socket也有一个类似于打开文件的函数调用，该函数返回一个整型的socket描述符，随后的连接建立、数据传输等操作都是通过socket描述符来实现的。

创建一个tcp socket(tcp套接字)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

::

 import socket
 s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
 
创建一个udp socket(udp套接字)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

::

 import socket
 s = socket.socket(socket.AF_INET,socket.SOck_DGRAM)

::

 from socket import *
 udpSocket = socket(AF_INET,SOck_DGRAM)
 udpSocket.sendto(b"haha","192.168.119.115",8080)



.. |image1| image:: ./image/19022501.webp
.. |image2| image:: ./image/19022502.webp
.. |image3| image:: ./image/i9022503.webp
